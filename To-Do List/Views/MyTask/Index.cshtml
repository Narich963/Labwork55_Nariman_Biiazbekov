@using To_Do_List.ViewModels
@model IndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <form asp-action="Index" method="get">
                <th>
                    <label for="name">Полное название</label>
                    <input class="form-control" name="fullName" id="name" type="text" />
                </th>
                <th>
                    <label for="datefrom">Дата от</label>
                    <input class="form-control" name="CreatedFrom" id="datefrom" type="datetime-local" />
                </th>
                <th>
                    <label for="dateto">Дата к</label>
                    <input class="form-control" name="CreatedTo" id="dateto" type="datetime-local" />
                </th>
                <th>
                    <label for="words">Поиск по содержимому</label>
                    <input class="form-control" name="wordContains" id="words" type="text" />
                </th>
                <th>
                    <label for="priority">Приоритет</label>
                    <select class="form-control" name="priority" id="priority">
                        <option value=""> </option>
                        <option value="Высокий">Высокий</option>
                        <option value="Средний">Средний</option>
                        <option value="Низкий">Низкий</option>
                    </select>
                </th>
                <th>
                <label for="status">Статус</label>
                    <select class="form-control" name="status" id="status">
                        <option value=""> </option>
                        <option value="Новая">Новая</option>
                        <option value="Открыта">Открыта</option>
                        <option value="Закрыта">Закрыта</option>
                    </select>
                </th>
                <button class="btn btn-primary">Фильтровать</button>
            </form>
        </tr>
    </thead>
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewBag.NameSort">Название</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewBag.PrioritySort">Приоритет</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewBag.StatusSort">Статус</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewBag.CreatedSort">Дата создания</a>
            </th>
            <th>
                Действия
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Tasks.Count == 0)
        {
            <p>Задач нету</p>
        }
        @foreach (var item in Model.Tasks) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                   @Html.DisplayFor(modelItem => item.Created)
            </td>
                @switch (item.Status)
                {
                    case "Новая":
                        <td>
                            <a asp-action="Open" asp-route-id="@item.Id">Открыть</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Детали</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                        </td>
                        break;
                    case "Закрыта":
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id">Детали</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                        </td>
                        break;
                    case "Открыта":
                        <td>
                            <a asp-action="Close" asp-route-id="@item.Id">Закрыть</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Детали</a> |
                        </td>
                        break;
                }
        </tr>
}
    </tbody>
</table>
<div class="row">
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a class="col-2" asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumger - 1)" class="btn btn-primary">Назад</a>
    }
    <span class="text-primary col-2">@Model.PageViewModel.PageNumger</span>
    @if (Model.PageViewModel.HasNextPage)
    {
        <a class="col-2" asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumger + 1)" class="btn btn-primary">Вперед</a>

    }
</div>
